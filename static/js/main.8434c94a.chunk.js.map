{"version":3,"sources":["components/Buttons.js","components/Display.js","Evaluation.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","className","id","onClick","this","props","onClear","onOpenParenthesis","onCloseParenthesis","onBackspace","onPowerOf","onSqRoot","onOperator","onDigit","onDecimal","onEquals","React","Component","Display","value","expression","join","currentInput","readOnly","rows","result","isNumber","input","test","isNotNumber","App","state","activeParenthesis","bind","escFunction","target","length","setState","innerText","lastElement","Calculator","pop","push","concat","evalMe","arrExpression","indexOf","openingIndex","closingIndex","lastIndexOf","i","newExpression","splice","temp","Math","sqrt","pow","parseFloat","slice","prevState","includes","lastInputType","event","keyCode","document","addEventListener","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8434c94a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Buttons.css';\r\n\r\nexport default class Buttons extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"buttons\">\r\n        <button id=\"clear\" onClick={this.props.onClear}>AC</button>\r\n        <button id=\"parenthesis-open\" onClick={this.props.onOpenParenthesis}>(</button>\r\n        <button id=\"parenthesis-close\" onClick={this.props.onCloseParenthesis}>)</button>\r\n        <button id=\"backspace\" onClick={this.props.onBackspace}><i className=\"material-icons\">backspace</i></button>\r\n\r\n        <button id=\"exponent\" onClick={this.props.onPowerOf}>x<sup>y</sup></button>\r\n        <button id=\"square\" onClick={this.props.onPowerOf}>x<sup>2</sup></button>\r\n        <button id=\"squareroot\" onClick={this.props.onSqRoot}>&radic;</button>\r\n        <button id=\"modulo\" onClick={this.props.onOperator}>%</button>\r\n\r\n        <button id=\"seven\" onClick={this.props.onDigit}>7</button>\r\n        <button id=\"eight\" onClick={this.props.onDigit}>8</button>\r\n        <button id=\"nine\" onClick={this.props.onDigit}>9</button>\r\n        <button id=\"divide\" onClick={this.props.onOperator}>/</button>\r\n\r\n        <button id=\"four\" onClick={this.props.onDigit}>4</button>\r\n        <button id=\"five\" onClick={this.props.onDigit}>5</button>\r\n        <button id=\"six\" onClick={this.props.onDigit}>6</button>\r\n        <button id=\"multiply\" onClick={this.props.onOperator}>*</button>\r\n\r\n        <button id=\"one\" onClick={this.props.onDigit}>1</button>\r\n        <button id=\"two\" onClick={this.props.onDigit}>2</button>\r\n        <button id=\"three\" onClick={this.props.onDigit}>3</button>\r\n        <button id=\"subtract\" onClick={this.props.onOperator}>-</button>\r\n\r\n        <button id=\"decimal\" onClick={this.props.onDecimal}>.</button>\r\n        <button id=\"zero\" onClick={this.props.onDigit}>0</button>\r\n        <button id=\"equals\" onClick={this.props.onEquals}>=</button>\r\n        <button id=\"add\" onClick={this.props.onOperator}>+</button>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './Display.css';\r\n\r\nexport default class Display extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"display-area\">\r\n        <form className=\"display\">\r\n          <textarea\r\n            className=\"display-expression\"\r\n            value={this.props.expression.join(\"\") + this.props.currentInput}\r\n            readOnly>\r\n          </textarea>\r\n          <textarea\r\n            className=\"display-result\"\r\n            id=\"display\"\r\n            rows=\"1\"\r\n            value={this.props.result}\r\n            readOnly>\r\n          </textarea>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","export function evalMe(arrExpression) {\r\n\r\n  let expression = [...arrExpression];\r\n\r\n  while (expression.length > 1) {\r\n    if (expression.indexOf(\"(\") >= 0) {\r\n      let openingIndex = expression.indexOf(\"(\");\r\n      let closingIndex = expression.lastIndexOf(\")\");\r\n      for (let i = openingIndex + 1; i < closingIndex; i++) {\r\n        if (expression[i] === \"(\") {\r\n          openingIndex = i;\r\n          continue;\r\n        }\r\n        else if (expression[i] === \")\") {\r\n          closingIndex = i;\r\n          break;\r\n        }\r\n      }\r\n      let newExpression = expression.splice(openingIndex + 1, closingIndex - openingIndex - 1);\r\n      expression[openingIndex] = evalMe(newExpression);\r\n      expression.splice(openingIndex + 1, 1);\r\n    }\r\n\r\n    else if (expression.indexOf(\"√\") >= 0) {\r\n      let temp = expression.indexOf(\"√\");\r\n      expression[temp] = Math.sqrt(expression[temp + 1]);\r\n      expression.splice(temp + 1, 1);\r\n    }\r\n    else if (expression.indexOf(\"^\") >= 0) {\r\n      let temp = expression.indexOf(\"^\");\r\n      expression[temp - 1] = Math.pow(parseFloat(expression[temp - 1]), parseFloat(expression[temp + 1]));\r\n      expression.splice(temp, 2);\r\n    }\r\n    else if (expression.indexOf(\"*\") >= 0) {\r\n      let temp = expression.indexOf(\"*\");\r\n      expression[temp - 1] = parseFloat(expression[temp - 1]) * parseFloat(expression[temp + 1]);\r\n      expression.splice(temp, 2);\r\n    }\r\n    else if (expression.indexOf(\"/\") >= 0) {\r\n      let temp = expression.indexOf(\"/\");\r\n      expression[temp - 1] = parseFloat(expression[temp - 1]) / parseFloat(expression[temp + 1]);\r\n      expression.splice(temp, 2);\r\n    }\r\n    else if (expression.indexOf(\"%\") >= 0) {\r\n      let temp = expression.indexOf(\"%\");\r\n      expression[temp - 1] = parseFloat(expression[temp - 1]) % parseFloat(expression[temp + 1]);\r\n      expression.splice(temp, 2);\r\n    }\r\n    else if (expression.indexOf(\"-\") >= 0) {\r\n      let temp = expression.indexOf(\"-\");\r\n      if (temp === 0) {\r\n        expression[temp] = 0 - parseFloat(expression[temp + 1]);\r\n        expression.splice(temp + 1, 1);\r\n      } else {\r\n        expression[temp - 1] = parseFloat(expression[temp - 1]) - parseFloat(expression[temp + 1]);\r\n        expression.splice(temp, 2);\r\n      }\r\n    }\r\n    else if (expression.indexOf(\"+\") >= 0) {\r\n      let temp = expression.indexOf(\"+\");\r\n      expression[temp - 1] = parseFloat(expression[temp - 1]) + parseFloat(expression[temp + 1]);\r\n      expression.splice(temp, 2);\r\n    }\r\n  }\r\n  return (expression[0]) + \"\";\r\n}\r\n\r\nexport function isNumber(input) {\r\n  return /\\d/.test(input);\r\n}\r\n\r\nexport function isNotNumber(input) {\r\n  return !isNumber(input);\r\n}","import React from 'react';\nimport './App.css';\nimport Buttons from \"./components/Buttons.js\";\nimport Display from \"./components/Display\"\nimport * as Calculator from './Evaluation';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expression: [],\n      currentInput: \"\",\n      result: \"\",\n      activeParenthesis: 0\n    }\n    this.onDigit = this.onDigit.bind(this);\n    this.onDecimal = this.onDecimal.bind(this);\n    this.onOperator = this.onOperator.bind(this);\n    this.onOpenParenthesis = this.onOpenParenthesis.bind(this);\n    this.onCloseParenthesis = this.onCloseParenthesis.bind(this);\n    this.onEquals = this.onEquals.bind(this);\n    this.onPowerOf = this.onPowerOf.bind(this);\n    this.onBackspace = this.onBackspace.bind(this);\n    this.onClear = this.onClear.bind(this);\n    this.onSqRoot = this.onSqRoot.bind(this);\n    this.escFunction = this.escFunction.bind(this);\n  }\n\n  onDigit({ target }) {\n    if (this.state.result.length > 0) {\n      this.onClear();\n      this.setState({ currentInput: target.innerText });\n      return;\n    }\n\n    let currentInput = this.state.currentInput;\n    const expression = this.state.expression;\n    const lastElement = expression[expression.length - 1];\n    if (currentInput.length > 0) { }\n    else if (expression.length > 0 && Calculator.isNumber(lastElement)) {\n      currentInput = expression.pop();\n    }\n    else if (lastElement === \")\") expression.push(\"*\");\n\n    currentInput = currentInput.concat(target.innerText);\n    this.setState({ currentInput: currentInput });\n  }\n\n  onEquals() {\n    if (this.state.result.length > 0) return;\n    const currentInput = this.state.currentInput;\n    const expression = this.state.expression;\n    if (currentInput.length > 0) {\n      expression.push(currentInput);\n    } else if (expression.length === 0) return;\n\n    let lastElement = expression[expression.length - 1];\n    let activeParenthesis = this.state.activeParenthesis;\n    while (Calculator.isNotNumber(lastElement) && lastElement !== \")\") {\n      if (lastElement === \"(\") activeParenthesis = activeParenthesis - 1;\n      expression.pop();\n      if (expression.length === 0) return;\n      lastElement = expression[expression.length - 1];\n    }\n    while (activeParenthesis !== 0) {\n      expression.push(\")\");\n      activeParenthesis = activeParenthesis - 1;\n    }\n    let result = Calculator.evalMe(expression);\n    this.setState({ result: result, currentInput: \"\", activeParenthesis: activeParenthesis });\n  }\n\n  onBackspace() {\n    let currentInput = this.state.currentInput;\n    const expression = this.state.expression;\n    const lastElement = expression[expression.length - 1]\n\n    if (currentInput.length > 0) {\n      currentInput = currentInput.slice(0, currentInput.length - 1);\n    }\n    else if (Calculator.isNotNumber(lastElement)) {\n      if (lastElement === \")\") {\n        this.setState((prevState) => ({ activeParenthesis: prevState.activeParenthesis + 1 }))\n      }\n      else if (lastElement === \"(\") {\n        this.setState((prevState) => ({ activeParenthesis: prevState.activeParenthesis - 1 }))\n      }\n      expression.pop();\n    }\n    else {\n      currentInput = expression.pop();\n      currentInput = currentInput.slice(0, currentInput.length - 1);\n    }\n    this.setState({ currentInput: currentInput, result: \"\" });\n  }\n\n  onDecimal({ target }) {\n    if (this.state.result.length > 0) {\n      this.onClear();\n      this.setState({ currentInput: \"0.\" });\n      return;\n    }\n    let currentInput = this.state.currentInput;\n    const expression = this.state.expression;\n    const lastElement = expression[expression.length - 1];\n\n    if (currentInput.length === 0 && Calculator.isNotNumber(lastElement)) {\n      currentInput = \"0.\"\n      this.setState({ currentInput: currentInput });\n      return;\n    }\n    else if (Calculator.isNumber(lastElement)) {\n      currentInput = expression.pop();\n      this.setState({ currentInput: currentInput });\n    }\n    if (currentInput.includes(\".\")) {\n      return;\n    } else this.onDigit({ target });\n  }\n\n  onPowerOf({ target }) {\n    if (this.state.result.length > 0) {\n      let expression = [this.state.result, \"^\"];\n      if (target.innerText === \"x2\") expression.push(\"2\");\n      this.setState({ expression: expression, result: \"\" });\n      return;\n    }\n    const currentInput = this.state.currentInput;\n    const expression = this.state.expression;\n    let lastElement = expression[expression.length - 1];\n    let activeParenthesis = this.state.activeParenthesis;\n    if (currentInput.length > 0) {\n      expression.push(currentInput, \"^\");\n      if (target.innerText === \"x2\") expression.push(\"2\");\n    }\n    else if (expression.length > 0) {\n      while (Calculator.isNotNumber(lastElement) && lastElement !== \")\") {\n        if (lastElement === \"(\") activeParenthesis = activeParenthesis - 1;\n        expression.pop();\n        lastElement = expression[expression.length - 1];\n      }\n      expression.push(\"^\");\n      if (target.innerText === \"x2\") expression.push(\"2\");\n    }\n    this.setState({ currentInput: \"\", activeParenthesis: activeParenthesis });\n  }\n\n  onSqRoot() {\n    if (this.state.result.length > 0) {\n      let expression = [\"√\", \"(\", this.state.result, \")\"];\n      this.setState({ expression: expression, result: \"\" });\n      return;\n    }\n    const currentInput = this.state.currentInput;\n    const expression = this.state.expression;\n    const lastElement = expression[expression.length - 1];\n    let activeParenthesis = this.state.activeParenthesis;\n\n    if (currentInput.length > 0) {\n      expression.push(currentInput, \"*\", \"√\", \"(\");\n      activeParenthesis = activeParenthesis + 1;\n    }\n    else if (Calculator.isNumber(lastElement) || lastElement === \")\") {\n      expression.push(\"*\", \"√\", \"(\");\n      activeParenthesis = activeParenthesis + 1;\n    }\n    else {\n      expression.push(\"√\", \"(\");\n      activeParenthesis = activeParenthesis + 1;\n    }\n    this.setState({ currentInput: \"\", activeParenthesis: activeParenthesis });\n  }\n\n  onOpenParenthesis() {\n    if (this.state.result.length > 0) {\n      this.onClear();\n      this.setState((prevState) => ({\n        expression: [\"(\"], activeParenthesis: prevState.activeParenthesis + 1\n      }));\n      return;\n    }\n    const expression = this.state.expression;\n    const currentInput = this.state.currentInput;\n    const lastElement = expression[expression.length - 1];\n    if (currentInput.length > 0) {\n      expression.push(currentInput, \"*\", \"(\");\n      this.setState({ currentInput: \"\" });\n    }\n    else if (Calculator.isNumber(lastElement) || lastElement === \")\") {\n      expression.push(\"*\", \"(\");\n    }\n    else expression.push(\"(\");\n    this.setState((prevState) => ({ activeParenthesis: prevState.activeParenthesis + 1 }));\n  }\n\n  onCloseParenthesis() {\n    if (this.state.activeParenthesis < 1) return;\n\n    const expression = this.state.expression;\n    const currentInput = this.state.currentInput;\n    const lastElement = expression[expression.length - 1];\n    if (currentInput.length > 0) {\n      expression.push(currentInput, \")\");\n      this.setState({ currentInput: \"\" })\n    }\n    else if (Calculator.isNumber(lastElement) || lastElement === \")\") {\n      expression.push(\")\");\n    }\n    else if (lastElement === \"(\") {\n      expression.pop();\n    }\n    else if (Calculator.isNotNumber(lastElement)) {\n      expression.pop();\n      expression.push(\")\");\n    }\n    this.setState((prevState) => ({ activeParenthesis: prevState.activeParenthesis - 1 }));\n  }\n\n  onOperator({ target }) {\n    if (this.state.result.length > 0) {\n      this.onClear();\n      let expression = [this.state.result, target.innerText];\n      this.setState({ expression: expression });\n      return;\n    }\n\n    let currentInput = this.state.currentInput;\n    const expression = this.state.expression;\n    const lastElement = expression[expression.length - 1];\n    if (expression.length === 0 && currentInput.length === 0 && target.innerText !== \"-\") return;\n    else if (currentInput.length > 0) {\n      if (currentInput.indexOf(\".\") === currentInput.length - 1) {\n        currentInput = currentInput.slice(0, currentInput.length - 1);\n      }\n      expression.push(currentInput);\n      this.setState({ currentInput: \"\" });\n    }\n    else if (lastElement === \"-\") return;\n    else if (lastElement === \"(\" || lastElement === \"√\") {\n      if (target.innerText !== \"-\") return;\n    }\n    else if (Calculator.isNotNumber(lastElement) && lastElement !== \")\") {\n      expression.pop();\n    }\n    expression.push(target.innerText);\n    this.setState({ expression: expression });\n  }\n\n  onClear() {\n    this.setState({\n      expression: [],\n      lastInputType: \"\",\n      currentInput: \"\",\n      result: \"\",\n      activeParenthesis: 0\n    })\n  }\n\n  escFunction(event) {\n    if (event.keyCode === 27) {\n      this.onClear();\n    }\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"calculator\">\n          <Display\n            currentInput={this.state.currentInput}\n            result={this.state.result}\n            expression={this.state.expression}>\n          </Display>\n          <Buttons\n            onDigit={this.onDigit}\n            onDecimal={this.onDecimal}\n            onPowerOf={this.onPowerOf}\n            onSqRoot={this.onSqRoot}\n            onOperator={this.onOperator}\n            onOpenParenthesis={this.onOpenParenthesis}\n            onCloseParenthesis={this.onCloseParenthesis}\n            onBackspace={this.onBackspace}\n            onClear={this.onClear}\n            onEquals={this.onEquals}>\n          </Buttons>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}